import React, { useState } from 'react';
import { Button, Box, Text, Page } from 'zmp-ui';
import { authorize } from 'zmp-sdk';
import toast from 'react-hot-toast';

interface PermissionOnboardingProps {
  onPermissionGranted: () => void;
}

export const PermissionOnboarding: React.FC<PermissionOnboardingProps> = ({ 
  onPermissionGranted 
}) => {
  const [isRequesting, setIsRequesting] = useState(false);

  const handleRequestPermission = async () => {
    setIsRequesting(true);
    
    try {
      console.log('üîê Requesting user info permission...');
      
      const permissions = await authorize({
        scopes: ['scope.userInfo']
      });

      console.log('üìã Permission result:', permissions);

      if (permissions['scope.userInfo']) {
        toast.success('C·∫•p quy·ªÅn th√†nh c√¥ng!');
        onPermissionGranted();
      } else {
        toast.error('C·∫ßn c·∫•p quy·ªÅn ƒë·ªÉ s·ª≠ d·ª•ng ·ª©ng d·ª•ng');
      }
    } catch (error: any) {
      console.error('‚ùå Permission error:', error);
      
      if (error?.code === -201) {
        toast.error('Vui l√≤ng cho ph√©p truy c·∫≠p th√¥ng tin ƒë·ªÉ s·ª≠ d·ª•ng ·ª©ng d·ª•ng');
      } else {
        toast.error('L·ªói xin quy·ªÅn. Vui l√≤ng th·ª≠ l·∫°i');
      }
    } finally {
      setIsRequesting(false);
    }
  };

  return (
    <Page className="permission-onboarding">
      <Box className="p-6 text-center">
        <div className="mb-6">
          <div className="text-6xl mb-4">üè•</div>
          <h1 className="text-2xl font-bold text-gray-800 mb-2">
            Ch√†o m·ª´ng ƒë·∫øn v·ªõi KajoTai
          </h1>
          <p className="text-gray-600">
            Ph√≤ng kh√°m v·∫≠t l√Ω tr·ªã li·ªáu chuy√™n nghi·ªáp
          </p>
        </div>

        <div className="bg-blue-50 p-4 rounded-lg mb-6">
          <h2 className="text-lg font-semibold text-blue-800 mb-3">
            üìù T·∫°i sao c·∫ßn quy·ªÅn truy c·∫≠p th√¥ng tin?
          </h2>
          <div className="text-left text-blue-700 space-y-2">
            <p>‚Ä¢ <strong>ƒê·∫∑t l·ªãch kh√°m:</strong> L∆∞u th√¥ng tin l·ªãch h·∫πn c·ªßa b·∫°n</p>
            <p>‚Ä¢ <strong>Qu·∫£n l√Ω h·ªì s∆°:</strong> Theo d√µi l·ªãch s·ª≠ kh√°m b·ªánh</p>
            <p>‚Ä¢ <strong>Th√¥ng b√°o:</strong> Nh·∫Øc nh·ªü l·ªãch h·∫πn v√† k·∫øt qu·∫£ kh√°m</p>
            <p>‚Ä¢ <strong>M√£ QR:</strong> T·∫°o m√£ check-in t·∫°i ph√≤ng kh√°m</p>
          </div>
        </div>

        <div className="bg-green-50 p-4 rounded-lg mb-6">
          <h3 className="text-md font-semibold text-green-800 mb-2">
            üîí Cam k·∫øt b·∫£o m·∫≠t
          </h3>
          <p className="text-green-700 text-sm">
            Th√¥ng tin c·ªßa b·∫°n ƒë∆∞·ª£c b·∫£o v·ªá theo ti√™u chu·∫©n y t·∫ø v√† 
            ch·ªâ s·ª≠ d·ª•ng cho m·ª•c ƒë√≠ch kh√°m ch·ªØa b·ªánh.
          </p>
        </div>

        <Button
          onClick={handleRequestPermission}
          loading={isRequesting}
          disabled={isRequesting}
          className="w-full bg-blue-600 text-white py-3 rounded-lg font-semibold"
        >
          {isRequesting ? 'ƒêang x·ª≠ l√Ω...' : '‚úÖ ƒê·ªìng √Ω v√† ti·∫øp t·ª•c'}
        </Button>

        <p className="text-xs text-gray-500 mt-4">
          B·∫±ng c√°ch ti·∫øp t·ª•c, b·∫°n ƒë·ªìng √Ω cho ph√©p KajoTai truy c·∫≠p 
          th√¥ng tin c∆° b·∫£n c·ªßa Zalo ƒë·ªÉ s·ª≠ d·ª•ng d·ªãch v·ª•.
        </p>
      </Box>
    </Page>
  );
};
